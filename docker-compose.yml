version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:14-alpine
    container_name: ticket-box-db
    environment:
      POSTGRES_DB: ticketbox
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # If you have initialization scripts, uncomment the following line
      # - ./db.sql:/docker-entrypoint-initdb.d/db.sql
      # - ./trigger.sql:/docker-entrypoint-initdb.d/trigger.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - ticket-box-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ticket-box-api
    environment:
      NODE_ENV: production
      PORT: 8000
      DB_HOST: postgres
      DB_NAME: ticketbox
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_PORT: 5432
      JWT_KEY: ${JWT_KEY:-yoursupersecretkey}
      JWT_EXPIRY: ${JWT_EXPIRY:-24h}
    volumes:
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ticket-box-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ticket-box-ui
    environment:
      BACKEND_URL: http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ticket-box-network

  # Nginx Reverse Proxy Service (for production)
  nginx:
    image: nginx:alpine
    container_name: ticket-box-nginx
    ports:
      - "80:80"
      # If using HTTPS, uncomment:
      # - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # If using HTTPS, uncomment:
      # - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - ticket-box-network

volumes:
  postgres_data:
    name: ticket-box-postgres-data
  backend_logs:
    name: ticket-box-backend-logs

networks:
  ticket-box-network:
    driver: bridge